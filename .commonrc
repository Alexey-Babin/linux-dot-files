#!/bin/sh

# Common .rc file for both bash and zsh

# Tune manuals
export MANPATH="/usr/local/man:$MANPATH"

export PATH="$HOME/bin:$HOME/.local/bin:$HOME/.cargo/bin:$HOME/scripts:/usr/local/bin:$PATH"

# Pagers: less, bat etc...
# make less more friendly for non-text input files, see lesspipe(1)
if test -x /usr/bin/lesspipe; then
    eval "$(SHELL=/bin/sh lesspipe)"
fi

export PAGER="less"
export LESSOPEN="| ~/.lessfilter %s"
export LESS='-R -S'
export MANPAGER="sh -c 'col -bx | batcat -l man -p'"
export MANROFFOPT="-c"
export BAT_PAGER="less -RF"
export EDITOR='vim'
export HISTCONTROL=ignoredups
command -v pspg >/dev/null && export PSPG_CONF="$HOME/.config/pspg/.pspgconf"
command -v psql >/dev/null && export PG_PAGER="pspg -X"
command -v psql >/dev/null && export PG_COLORS="error=01;31:warning=01;20:note=01;36:locus=01"
command -v psql >/dev/null && export PG_COLOR="always"


# enable color support of ls and also add handy aliases
if test -x /usr/bin/dircolors; then
    if test -r ~/.dircolors; then
        eval "$(dircolors -b ~/.dircolors)"
    else
        eval "$(dircolors -b)"
    fi
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# color support for --help with bathelp
alias bathelp='batcat --plain --language=help'
help() {
  "$@" --help 2>&1 | bathelp
}


# Date and Timezone, Lang, Locale etc.
export TZ='Europe/Moscow'
export LANG=ru_RU.UTF-8
export LC_MESSAGES=POSIX

# shellcheck source=/dev/null
[ -f "$HOME"/.aliases ] && . "$HOME/.aliases"


# shellcheck source=/dev/null
[ -f "${XDG_CACHE_HOME:-$HOME/.config}/fzf/fzf.config.sh" ] && . "${XDG_CACHE_HOME:-$HOME/.config}/fzf/fzf.config.sh"

# shellcheck source=/dev/null
[ -f "$HOME/.cargo/env" ] && . "$HOME/.cargo/env"

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# work with GPG encoded content
GPG_TTY="$TTY"
export GPG_TTY

# pyenv
[ -d "$HOME/.pyenv" ] && export PYENV_ROOT="$HOME/.pyenv"
if [ -e "$PYENV_ROOT/bin" ] ; then
  command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init -)"
fi
