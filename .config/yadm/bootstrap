#!/bin/bash

#####################################################################
# FUNCTIONS
#
info() {
  tput setaf 4; printf "%s\n" "$@"; tput sgr0
}

warning() {
  tput setaf 3 bold; printf "%s\n" "$@"; tput sgr0
  sleep 0.5
}

success() {
  tput setaf 2; printf "%s\n" "$@"; tput sgr0
}

code() {
  tput dim; printf "%s\n" "$@"; tput sgr0
}

instprog() {
  package=$1
  code=$2
  if ! command -v "$package" > /dev/null 2>&1; then
    info "Installing $package..."
    eval "$code"
  else
    success "$package is already installed"
  fi
}

#####################################################################
# MAIN
mkdir -p "$HOME/bin"
mkdir -p "$HOME/programs"

if [ "$(whoami)" != "root" ]; then
  SUDO=sudo
fi

info "Updating apt..."
"$SUDO" apt update \
  && "$SUDO" apt upgrade \
  && "$SUDO" apt dist-upgrade \
  && "$SUDO" apt autoremove \
  && "$SUDO" apt autoclean \
  && "$SUDO" apt clean

# PACKAGE INSTALLATION TOOLS
# nala (https://gitlab.com/volian/nala)
info "Installing nala"
instprog nala "$SUDO apt install nala -y"

info "Installing deborphan"
instprog deborphan "$SUDO nala install deborphan -y"

info "Installing lanugage pack"
$SUDO apt-get install language-pack-XX

info "Installing curl"
instprog curl "$SUDO nala install curl -y"

# SEARCH TOOLS
# fd (fd-find) is a program to find entries in your filesystem (alternative to find)
# https://github.com/sharkdp/fd
instprog fdfind "$SUDO nala install fd-find -y"

# rg (ripgrep) ripgrep is a line-oriented search tool that recursively searches 
# the current directory for a regex pattern
# https://github.com/BurntSushi/ripgrep
info "Installing ripgrep"
instprog rg "$SUDO nala install ripgrep -y"

# fzf (Command Line Fuzzy Finder)
# https://github.com/junegunn/fzf
info "Installing fzf"
if ! command -v fzf > /dev/null 2>&1 ; then
  git clone --depth 1 https://github.com/junegunn/fzf.git "$HOME/.fzf"
  "$HOME/.fzf/install"
else
  success "fzf is already installed"
fi

# Shellcheck - tool for spell checking of bash scripts (a.e. in vim)
# https://github.com/koalaman/shellcheck
info "Installing shellcheck"
instprog shellcheck "$SUDO nala install shellcheck -y"

# Midnight commander
info "Installing Midnight Commander"
instprog mc "$SUDO nala install mc -y"


# batcat https://github.com/sharkdp/bat
info "Installing Bat(cat)"
instprog batcat "$SUDO nala install bat -y"

# pdf-to-text renderer (less will be abele to show .pdf file content)
info "Installing pdf-to-text"
instprog pdftotext "$SUDO nala install poppler-utils -y"

# neofetch - beautiful systen information
info "Installing Neofetch"
instprog neofetch "$SUDO nala install neofetch -y"

# RUST
info "AND NOW RUST"
instprog cc "$SUDO nala install build-essential -y"
info "Updating rustup (installing if needed)..."
instprog "rustup" "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh"
rustup update

# hipster things in shell :)
info "ZSH"
instprog zsh "$SUDO nala install zsh -y"

if [[ ! -d "$HOME/.oh-my-zsh" ]]; then
  info "Installing oh-my-zsh..."
  sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
else
  success "oh-my-zsh is already installed"
fi

zsh_powerlevel10k=${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
if [[ ! -d "$zsh_powerlevel10k" ]]; then
  info "Installing powerlevel10k"
  git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "$zsh_powerlevel10k"
else
  success "powerlevel10k is already installed"
fi

zsh_completions=${ZSH_CUSTOM:-${ZSH:-$HOME/.oh-my-zsh}/custom}/plugins/zsh-completions
if [[ ! -d $zsh_completions ]]; then
  info "Installing zsh-completions..."
  git clone https://github.com/zsh-users/zsh-completions "$zsh_completions"
else
  success "zsh-completions is already installed"
fi

zsh_autosuggestions=${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
if [[ ! -d $zsh_autosuggestions ]]; then
  info "Installing zsh-autosuggestions..."
  git clone https://github.com/zsh-users/zsh-autosuggestions "$zsh_autosuggestions"
else
  success "zsh-autosuggestions is already installed"
fi

zsh_syntax_highlighting=${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
if [[ ! -d $zsh_syntax_highlighting ]]; then
  info "Installing zsh-syntax-highlighting..."
  git clone https://github.com/zsh-users/zsh-syntax-highlighting "$zsh_syntax_highlighting"
else
  success "zsh-syntax-highlighting is already installed"
fi

zsh_fzf_tab=${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/fzf-tab
if [[ ! -d $zsh_fzf_tab ]]; then
  info "Installing zsh-fzf-tab..."
  git clone https://github.com/Aloxaf/fzf-tab "$zsh_fzf_tab"
else
  success "zsh-fzf-tab already installed"
fi

# Lesspipe - less can read archives, directories, pdfs and images
if ! command -v lesspipe > /dev/null 2>&1 ; then
  info "Lesspipe - less can read archives, directories, pdfs and images"
  "$SUDO" nala install exa pkg-config rar -y
  git clone https://github.com/wofr06/lesspipe.git "$HOME/programs/lesspipe"
  (cd "$HOME/programs/lesspipe" && "$SUDO" ./configure && "$SUDO" make install PREFIX=/usr/local)
else
  success "Lesspipe already installed"
fi

# chafa - image viewer for terminal
info "chafa - image viewer for terminal"
instprog chafa "$SUDO nala install chafa -y"

# lf - light file manager
info "Installing lf - light file manager r31"
if ! command -v lf > /dev/null 2>&1 ; then
  curl --location --remote-header-name https://github.com/gokcehan/lf/releases/download/r31/lf-linux-amd64.tar.gz \
    | tar --extract --gunzip --directory="$HOME/bin"
  git clone https://github.com/gokcehan/lf.git "$HOME/programs/lf"
  install -D "$HOME/programs/lf/etc/lf.zsh" "$HOME/.oh-my-zsh/completions/_lf" -m 644
else
  success "lf is already installed"
fi

info "Installing lsd - color ls" 
instprog lsd "cargo install lsd"

info "Installing duf - color du"
instprog duf "$SUDO nala install duf -y"

info "Installing dust - beautiful tree showing disk occupied"
if ! command -v dust > /dev/null 2>&1 ; then
  curl --location --remote-name --remote-header-name https://github.com/bootandy/dust/releases/download/v0.8.6/du-dust_0.8.6_amd64.deb
  "$SUDO" dpkg -i du-dust_0.8.6_amd64.deb
  rm du-dust_0.8.6_amd64.deb
else
  success "Dust is already installed"
fi

info "Installing urlview"
instprog urlview "$SUDO nala install urlview -y"

# Tmux and features
info "Installing tmux and options"
instprog tmux "$SUDO nala install tmux -y"
oh_my_tmux_dir="$HOME/programs/.oh-my-tmux"
if [[ ! -d "$oh_my_tmux_dir" ]] ; then
  git clone https://github.com/gpakosz/.tmux.git "$oh_my_tmux_dir"
  mkdir -p "$HOME/.config/tmux"
  ln -s "$oh_my_tmux_dir/.tmux.conf" "$HOME/.config/tmux/tmux.conf"
else
  success "oh-my-tmux is already installed"
fi

# Finalizing - clean after all installation
"$SUDO" nala autoremove

[[ -f .zshrc.pre-oh-my-zsh ]] && mv .zshrc.pre-oh-my-zsh .zshrc

"$SUDO" update-alternatives --config editor
